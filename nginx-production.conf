# ============================================================
# Nginx生产环境配置 - news.guancn.me
# Clash订阅转换服务 - FastAPI + Vue.js
# ============================================================

# 上游后端服务器
upstream clash_backend {
    server 127.0.0.1:8000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# 上游前端服务器
upstream clash_frontend {
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# HTTP服务器配置 - 重定向到HTTPS
server {
    listen 80;
    server_name news.guancn.me www.news.guancn.me;
    
    # Let's Encrypt验证路径
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }
    
    # 其他所有请求重定向到HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS主服务器配置
server {
    listen 443 ssl http2;
    server_name news.guancn.me;
    
    # SSL证书配置
    ssl_certificate /etc/letsencrypt/live/news.guancn.me/fullchain.pem;
    ssl_private_key /etc/letsencrypt/live/news.guancn.me/privkey.pem;
    
    # SSL安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 安全头设置
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:;" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 基本配置
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    send_timeout 60s;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;
    
    # 日志配置
    access_log /var/log/nginx/clash-converter.access.log;
    error_log /var/log/nginx/clash-converter.error.log;
    
    # 首页重定向到转换页面
    location = / {
        return 301 https://$server_name/convert/;
    }
    
    # API路由 - 代理到后端FastAPI
    location /api/ {
        # 移除/api前缀并代理到后端
        rewrite ^/api/(.*) /$1 break;
        
        proxy_pass http://clash_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓存控制
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # 健康检查端点
    location /health {
        proxy_pass http://clash_backend/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
        
        # 快速超时
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # API文档路由
    location /docs {
        proxy_pass http://clash_backend/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # OpenAPI规范
    location /openapi.json {
        proxy_pass http://clash_backend/openapi.json;
        proxy_set_header Host $host;
        add_header Cache-Control "public, max-age=3600";
    }
    
    # 静态文件缓存策略
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://clash_frontend;
        proxy_set_header Host $host;
        
        # 静态资源缓存
        expires 7d;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # 启用gzip
        gzip_static on;
    }
    
    # 前端路由 - 代理到Vue.js应用
    location / {
        proxy_pass http://clash_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # SPA路由支持
        try_files $uri $uri/ @fallback;
    }
    
    # SPA回退处理
    location @fallback {
        proxy_pass http://clash_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 错误页面
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # 隐藏Nginx版本信息
    server_tokens off;
    
    # 限制请求方法
    if ($request_method !~ ^(GET|POST|PUT|DELETE|HEAD|OPTIONS)$ ) {
        return 405;
    }
    
    # 防止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 防止访问备份文件
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# www子域名重定向
server {
    listen 443 ssl http2;
    server_name www.news.guancn.me;
    
    # 使用相同的SSL证书
    ssl_certificate /etc/letsencrypt/live/news.guancn.me/fullchain.pem;
    ssl_private_key /etc/letsencrypt/live/news.guancn.me/privkey.pem;
    
    # 重定向到主域名
    return 301 https://news.guancn.me$request_uri;
}