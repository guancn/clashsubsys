# 新系统Nginx配置 - 支持多域名路由和路径分离
# 设计思路: 通过不同路径前缀区分新旧系统
# 现有系统: sub.guancn.me/        (subconverter + sub-web)  
# 新系统: sub.guancn.me/clash-v2/ (FastAPI + Vue.js)

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # 压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate no_last_modified no_etag auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # 上游服务器配置
    upstream clash-backend-v2 {
        server clash-backend-v2:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream clash-frontend-v2 {
        server clash-frontend-v2:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # 服务器配置 - 新系统通过路径前缀区分
    server {
        listen 8080;
        listen [::]:8080;
        server_name localhost sub.guancn.me clash.guancn.me;
        
        # 安全头
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # 请求大小限制
        client_max_body_size 1M;
        client_body_buffer_size 16k;
        client_header_buffer_size 1k;
        
        # 超时设置
        client_body_timeout 10s;
        client_header_timeout 10s;
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
        
        # 新系统 API 路由 - /clash-v2/api/* 
        location /clash-v2/api/ {
            # 移除路径前缀后转发给后端
            rewrite ^/clash-v2/api/(.*) /clash/api/$1 break;
            
            proxy_pass http://clash-backend-v2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # 健康检查和错误处理
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 10s;
        }
        
        # 新系统前端路由 - /clash-v2/*
        location /clash-v2/ {
            # 移除路径前缀后转发给前端
            rewrite ^/clash-v2/(.*) /$1 break;
            
            proxy_pass http://clash-frontend-v2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # 静态文件缓存
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2|woff|ttf|eot)$ {
                proxy_pass http://clash-frontend-v2;
                expires 7d;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # 健康检查端点
        location /clash-v2/health {
            proxy_pass http://clash-backend-v2/health;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # 默认根路径 - 返回新系统信息页面
        location = / {
            return 302 /clash-v2/;
        }
        
        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
            return 404 "Page Not Found - Clash Converter V2";
        }
        
        location = /50x.html {
            internal;
            return 500 "Internal Server Error - Clash Converter V2";
        }
    }
    
    # HTTPS 服务器配置（如果需要SSL）
    server {
        listen 8443 ssl http2;
        listen [::]:8443 ssl http2;
        server_name localhost sub.guancn.me clash.guancn.me;
        
        # SSL证书配置（如果有的话）
        # ssl_certificate /etc/nginx/ssl/cert.pem;
        # ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # 暂时使用自签名证书或禁用SSL
        # 如需启用，请取消注释上面的证书配置
        
        # SSL安全配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # 其他配置与HTTP服务器相同
        include /etc/nginx/conf.d/common_locations.conf;
    }
}