# 生产环境 Nginx 配置 - 支持双系统共存
# 基于现有配置，添加新的 Clash 转换器路由

server {
    if ($host = sub.guancn.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    listen [::]:80;
    server_name sub.guancn.me;

    # Certbot 验证所需的路径，不应被代理
    location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
    }

    # 将所有非 /sub 的请求代理到前端
    location / {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name sub.guancn.me;

    ssl_certificate /etc/letsencrypt/live/sub.guancn.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sub.guancn.me/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # 压缩设置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/css application/javascript application/json application/xml text/xml application/rss+xml;

    # ==================== 新增：Clash 转换器路由 ====================
    
    # Clash 转换器 API 路由
    location /clash/api/ {
        # 移除路径前缀，转发到后端
        rewrite ^/clash/api/(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:8001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API 特殊设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # CORS 头设置
        add_header Access-Control-Allow-Origin "https://sub.guancn.me" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept" always;
        
        # OPTIONS 请求处理
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    # Clash 转换器前端路由
    location /clash/ {
        # 代理到前端容器，保持/clash/路径
        proxy_pass http://127.0.0.1:3001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://127.0.0.1:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Clash 转换器根路径重定向
    location = /clash {
        return 301 $scheme://$host/clash/;
    }

    # ==================== 现有系统路由（保持不变）====================
    
    # 将 /sub 路径的请求代理到后端 subconverter
    location /sub {
        proxy_pass http://127.0.0.1:25500;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 将所有其他请求代理到前端 sub-web
    location / {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}